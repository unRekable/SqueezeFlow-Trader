# version: '3.8'  # Obsolete in newer Docker Compose

name: squeezeflow-trader

networks:
  squeezeflow_network:
    driver: bridge
  aggr_backend:
    external: true

volumes:
  influxdb_data:
    driver: local
  redis_data:
    driver: local
  freqtrade_data:
    driver: local

services:
  # InfluxDB - Use existing from aggr-server
  # influxdb:
  #   External InfluxDB at localhost:8086 (aggr-server)

  # Redis - Caching and Message Queue
  redis:
    container_name: squeezeflow-redis
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - squeezeflow_network

  # aggr-server - Real-time Data Collection (ORIGINAL aus aggr-server/)
  aggr-server:
    container_name: aggr-server
    build:
      context: ./aggr-server
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "3000:3000"  # Original Port
    environment:
      - PORT=3000
      - WORKDIR=/usr/src/app/
      - FILES_LOCATION=./data
      - INFLUX_HOST=aggr-influx
      - INFLUX_PORT=8086
    volumes:
      - ./aggr-server:/usr/src/app/
    networks:
      - squeezeflow_network
      - aggr_backend
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1024M
        reservations:
          cpus: '0.3'
          memory: 512M

  # InfluxDB - Time-series Database (ORIGINAL aus aggr-server/)
  aggr-influx:
    container_name: aggr-influx
    image: influxdb:1.8.10
    restart: unless-stopped
    ports:
      - "8086:8086"
    volumes:
      - influxdb_data:/var/lib/influxdb
    environment:
      - INFLUXDB_DB=significant_trades
      - INFLUXDB_ADMIN_USER=admin
      - INFLUXDB_ADMIN_PASSWORD=admin123
      - INFLUXDB_DATA_CACHE_MAX_MEMORY_SIZE=1g
      - INFLUXDB_DATA_CACHE_SNAPSHOT_MEMORY_SIZE=25m
      - INFLUXDB_DATA_MAX_CONCURRENT_COMPACTIONS=2
    networks:
      - squeezeflow_network
      - aggr_backend
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 4096M
        reservations:
          cpus: '0.3'
          memory: 2048M

  # Chronograf - InfluxDB Admin UI (ORIGINAL aus aggr-server/)
  aggr-chronograf:
    container_name: aggr-chronograf
    image: chronograf:latest
    restart: unless-stopped
    volumes:
      - ./aggr-server/data/chronograf:/var/lib/chronograf
    ports:
      - '8885:8888'
    environment:
      - 'INFLUXDB_URL=http://aggr-influx:8086'
    depends_on:
      - aggr-influx
    networks:
      - squeezeflow_network
      - aggr_backend

  # Open Interest Tracker
  oi-tracker:
    container_name: squeezeflow-oi-tracker
    build:
      context: .
      dockerfile: docker/Dockerfile.oi-tracker
    restart: unless-stopped
    environment:
      - INFLUX_HOST=aggr-influx
      - INFLUX_PORT=8086
      - INFLUX_DATABASE=significant_trades
      - REDIS_URL=redis://redis:6379
    depends_on:
      - redis
      - aggr-influx
    networks:
      - squeezeflow_network

  # Strategy Runner Service
  strategy-runner:
    container_name: squeezeflow-strategy-runner
    build:
      context: .
      dockerfile: docker/Dockerfile.strategy-runner
    restart: unless-stopped
    environment:
      - TZ=Europe/Berlin
      - SQUEEZEFLOW_RUN_INTERVAL=1
      - SQUEEZEFLOW_MAX_SYMBOLS=3
      - SQUEEZEFLOW_LOOKBACK_HOURS=1
      - SQUEEZEFLOW_TIMEFRAME=1m
      - SQUEEZEFLOW_MIN_DATA_POINTS=40
      - SQUEEZEFLOW_LOG_LEVEL=DEBUG
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - INFLUX_HOST=aggr-influx
      - INFLUX_PORT=8086
      - INFLUX_DATABASE=significant_trades
      - INFLUX_USERNAME=
      - INFLUX_PASSWORD=
      - FREQTRADE_API_URL=http://freqtrade:8080
      - FREQTRADE_API_USERNAME=0xGang
      - FREQTRADE_API_PASSWORD=0xGang
      - FREQTRADE_API_TIMEOUT=10
      - FREQTRADE_ENABLE_INTEGRATION=true
    depends_on:
      - redis
      - aggr-influx
    volumes:
      - ./freqtrade/config/config.json:/app/freqtrade/user_data/config.json:ro
    networks:
      - squeezeflow_network
      - aggr_backend
    healthcheck:
      test: ["CMD", "python", "-c", "import redis; r=redis.Redis(host='redis', port=6379); r.ping()"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.25'

  # Freqtrade with FreqAI and built-in UI
  freqtrade:
    container_name: squeezeflow-freqtrade
    image: freqtradeorg/freqtrade:stable_freqai
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      - ./freqtrade/user_data:/freqtrade/user_data
      - ./freqtrade/config/config.json:/freqtrade/config/config.json:ro
    depends_on:
      - redis
      - strategy-runner
    networks:
      - squeezeflow_network
    command: >
      trade
      --config /freqtrade/config/config.json
      --strategy SqueezeFlowFreqAI
      --logfile /freqtrade/user_data/logs/freqtrade.log
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G

  # Health Monitor - HTTP health check endpoints
  health-monitor:
    container_name: squeezeflow-health-monitor
    build:
      context: .
      dockerfile: docker/Dockerfile.squeezeflow
    command: python services/health_monitor.py
    restart: unless-stopped
    ports:
      - "8090:8080"  # HTTP health check endpoints (using 8090 to avoid conflict)
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - INFLUX_HOST=aggr-influx
      - INFLUX_PORT=8086
      - INFLUX_DATABASE=significant_trades
      - LOG_LEVEL=INFO
    depends_on:
      - redis
      - aggr-influx
      - strategy-runner
    networks:
      - squeezeflow_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    volumes:
      - ./data/monitoring:/app/data/monitoring
      - /var/run/docker.sock:/var/run/docker.sock:ro  # Docker socket access for container management

  # Performance Monitor - Metrics collection and alerting
  performance-monitor:
    container_name: squeezeflow-performance-monitor
    build:
      context: .
      dockerfile: docker/Dockerfile.squeezeflow
    command: python services/performance_monitor.py
    restart: unless-stopped
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - INFLUX_HOST=aggr-influx
      - INFLUX_PORT=8086
      - INFLUX_DATABASE=significant_trades
      - LOG_LEVEL=INFO
    depends_on:
      - redis
      - aggr-influx
      - health-monitor
    networks:
      - squeezeflow_network
    volumes:
      - ./data/monitoring:/app/data/monitoring
      - ./data/charts:/app/data/charts

  # Signal Monitor Dashboard - Real-time signal visualization
  signal-monitor-dashboard:
    container_name: squeezeflow-signal-dashboard
    build:
      context: .
      dockerfile: docker/Dockerfile.squeezeflow
    command: python services/signal_monitor_dashboard.py
    restart: unless-stopped
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - LOG_LEVEL=INFO
    depends_on:
      - redis
      - strategy-runner
    networks:
      - squeezeflow_network
    volumes:
      - ./data/logs:/app/data/logs
    tty: true  # Required for terminal dashboard display
    stdin_open: true

